.. java:import:: java.io Serializable

.. java:import:: java.time LocalDateTime

.. java:import:: javax.validation.constraints NotEmpty

.. java:import:: javax.validation.constraints NotNull

.. java:import:: javax.validation.constraints Pattern

.. java:import:: javax.validation.constraints Size

.. java:import:: org.javers.core.metamodel.annotation ValueObject

.. java:import:: eu.dzhw.fdz.metadatamanagement.common.domain.util Patterns

.. java:import:: eu.dzhw.fdz.metadatamanagement.common.domain.validation StringLengths

.. java:import:: lombok AllArgsConstructor

.. java:import:: lombok Builder

.. java:import:: lombok Data

.. java:import:: lombok NoArgsConstructor

Release
=======

.. java:package:: eu.dzhw.fdz.metadatamanagement.projectmanagement.domain
   :noindex:

.. java:type:: @NoArgsConstructor @Data @AllArgsConstructor @Builder @ValueObject public class Release implements Serializable

   The release object contains the version and a timestamp of the current release.

Fields
------
firstDate
^^^^^^^^^

.. java:field:: private LocalDateTime firstDate
   :outertype: Release

   The timestamp (in UTC) indicates when a publisher has released the \ :java:ref:`DataAcquisitionProject`\  with the current version for the first time. Will be generated by the server and will not be empty.

lastDate
^^^^^^^^

.. java:field:: @NotNull private LocalDateTime lastDate
   :outertype: Release

   The timestamp (in UTC) indicates when a publisher has released the \ :java:ref:`DataAcquisitionProject`\  with the current version the last time. Must not be empty.

serialVersionUID
^^^^^^^^^^^^^^^^

.. java:field:: private static final long serialVersionUID
   :outertype: Release

version
^^^^^^^

.. java:field:: @NotEmpty @Size @Pattern private String version
   :outertype: Release

   A valid semver version (major.minor.patch). Must not be empty and must not contain more than 32 characters. A version of a \ :java:ref:`DataAcquisitionProject`\  must not be decreased.

