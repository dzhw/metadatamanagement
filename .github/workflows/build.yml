name: Java CI with Maven (build only)

on:
  push:
    branches-ignore:
      - development
      - test
      - master
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Cache maven artifacts
      uses: actions/cache@v2
      env:
        cache-name: cache-maven-artifacts
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.m2
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
    - name: Set up Python 2.7
      uses: actions/setup-python@v2
      with:
        python-version: 2.7
    - name: Install custom javasphinx
      run: pip install git+https://github.com/dzhw/javasphinx.git
    - name: Set up node 14.14.0
      uses: actions/setup-node@v2.1.2
      with:
        node-version: 14.14.0
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - name: Install Grunt globally
      run: npm install -g grunt-cli
    - name: Get branch name
      uses: nelonoel/branch-name@v1.0.1
    - name: Build with Maven
      run: ./deploy/build.sh unused ${BRANCH_NAME}
      env:
        REPO_GITHUB_USERNAME: ${{ secrets.REPO_GITHUB_USERNAME }}
        REPO_GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}
    - name: Report build status via Slack
      uses: act10ns/slack@v1
      if: always()
      with:
        status: ${{ job.status }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
